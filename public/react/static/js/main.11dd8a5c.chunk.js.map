{"version":3,"sources":["components/text-editor/constant.js","components/text-editor/TextEditor.js","components/log-in/Login.js","helper/helper-functions.js","helper/backend.js","components/sign-up/Signup.js","store/actions.js","pages/home/Home.js","components/add-task/AddTask.js","components/completed-task/CompletedTask.js","components/tasks/Task.js","pages/todo/Todo.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["TOOLBAR_OPTIONS","size","header","list","script","indent","direction","color","background","font","align","TextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","createQuill","container","document","getElementById","options","debug","modules","toolbar","constants","placeholder","readOnly","theme","Quill","state","react_default","a","createElement","id","Component","Login","signIn","username","password","remebmer","name","event","target","checked","value","setState","_this2","onSubmitHandler","onSubmit","className","htmlFor","required","onChange","signInOnChangeHandler","bind","type","data-type","react_router_dom","to","href","getCookie","cname","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","getOS","userAgent","window","navigator","platform","os","test","excludeUrlForAuthenticate","AxiosInstance","Axios","create","headers","Content-Type","location","hostname","defaults","baseURL","interceptors","request","use","config","includes","url","HELPER","error","Promise","reject","get","arguments","undefined","post","data","Signup","signUp","repeat","email","usertype","country","ip","device","BACKEND","then","locationData","city","query","err","_this3","signUpOnChangeHandler","fetchTasks","dispatch","Home","hlp","getUserData","selectedForm","Backend","result","tasks","setTimeout","history","push","pathname","preventDefault","payload","remember","gotoDashboard","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","_React$createElement","_React$createElement2","_this4","_this$state","style","defineProperty","formSelectionHanndler","Login_Login","Signup_Signup","connect","taskState","_ref","actions","AddTask","openNewTodo","toggleTodoHandler","addNewTodoHandler","formData","title","description","priority","onChangeHandler","role","onClick","toLocaleString","rows","cols","CompletedTask","_this$props","completedTask","removeCompletedTaskHandler","num","toLowerCase","key","React","memo","task","deleteTaskHandler","addCompletedTaskHandler","draggable","time","Todo","authState","isAuthenticated","response","localForage","getItem","updateTasks","updatedResponse","slice","map","index","body","completed","prevState","splice","console","log","onDragStart","tasks_Task","AddTask_AddTask","completed_task_CompletedTask","getState","setItem","success","App","Fragment","react_router","path","exact","component","Boolean","match","initialState","Reducer","action","objectSpread","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11dd8a5c.chunk.js","sourcesContent":["export const TOOLBAR_OPTIONS = [\n  ['bold', 'italic', 'underline', 'strike'],\n  ['link', 'image'],\n  [{ size: ['small', false, 'large', 'huge'] }],\n  ['blockquote', 'code-block'],\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n  [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n  [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent\n  [{ 'direction': 'rtl' }],                         // text direction\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n  [{ 'font': [] }],\n  [{ 'align': [] }],\n  ['clean']                                         // remove formatting button\n];","import React, { Component } from 'react';\nimport * as constants from './constant';\nimport Quill from 'quill';\n\nclass TextEditor extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  componentDidMount = () => {\n    this.createQuill();\n  }\n\n  createQuill = () => {\n    var container = document.getElementById('editor');\n    var options = {\n      debug: 'info',\n      modules: {\n        toolbar: constants.TOOLBAR_OPTIONS\n      },\n      placeholder: 'Compose an epic...',\n      readOnly: false,\n      theme: 'snow'\n    };\n    var editor = new Quill(container, options);\n  }\n\n  render() {\n    return (\n      <div id=\"editor\">\n      </div>\n    )\n  }\n}\n\nexport default TextEditor;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      signIn: {\n        username: '',\n        password: '',\n        remebmer: false\n      },\n      name: 'sign-in'\n    }\n  }\n\n  signInOnChangeHandler(event) {\n    const { signIn } = this.state;\n    if (event.target.name === 'remebmer') {\n      signIn[event.target.name] = event.target.checked;\n    } else {\n      signIn[event.target.name] = event.target.value;\n    }\n    this.setState({\n      signIn\n    });\n  }\n\n  render() {\n    const { onSubmitHandler } = this.props;\n\n    return (\n      <form onSubmit={(event) => { onSubmitHandler(event, this.state) }} className=\"sign-in-htm\">\n        <div className=\"group\">\n          <label htmlFor=\"user\" className=\"label\">Email</label>\n          <input required onChange={this.signInOnChangeHandler.bind(this)} id=\"user\" name=\"username\" type=\"text\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Password</label>\n          <input required onChange={this.signInOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"password\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <input onChange={this.signInOnChangeHandler.bind(this)} id=\"check\" type=\"checkbox\" name=\"remebmer\" className=\"check\" />\n          <label htmlFor=\"check\"><span className=\"icon\"></span> Keep me Signed in</label>\n        </div>\n        <div className=\"group\">\n          <input type=\"submit\" className=\"button\" name=\"sign-in\" value=\"Sign In\" />\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <Link to=\"/todos\">Use App without Login</Link>\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <a href=\"#forgot\">Forgot Password?</a>\n        </div>\n      </form>\n    )\n  }\n}\n","export const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport const setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nexport const getOS = () => {\n  var userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'],\n    os = null;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n}","import Axios from 'axios';\nimport * as HELPER from './helper-functions';\n\nconst excludeUrlForAuthenticate = ['/login', '/signup', 'http://ip-api.com/json'];\n\nconst AxiosInstance = Axios.create({\n  headers: { 'Content-Type': 'application/json' }\n});\n\nif (window.location.hostname === 'localhost') {\n  AxiosInstance.defaults.baseURL = 'http://localhost:5000';\n} else {\n  AxiosInstance.defaults.baseURL = 'http://droidtechknow-dashboard.herokuapp.com';\n}\n\n// Request interceptor\nAxiosInstance.interceptors.request.use((config) => {\n  if (!excludeUrlForAuthenticate.includes(config.url)) {\n    config.headers['token'] = HELPER.getCookie('token');\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport const get = (url, options = null) => AxiosInstance.get(url, options);\nexport const post = (url, data, options = null) => AxiosInstance.post(url, data, options);\n","import React, { Component } from 'react'\nimport * as HELPER from '../../helper/helper-functions';\nimport * as BACKEND from '../../helper/backend';\nexport default class Signup extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      signUp: {\n        username: '',\n        password: '',\n        repeat: '',\n        email: '',\n        usertype: 'admin',\n        country: 'Country is not defiend',\n        ip: 'IP is not defiend',\n        device: HELPER.getOS(),\n      },\n      name: 'sign-up'\n    }\n  }\n\n  signUpOnChangeHandler(event) {\n    const { signUp } = this.state;\n    signUp[event.target.name] = event.target.value;\n    BACKEND.get('http://ip-api.com/json').then((locationData) => {\n      signUp.country = locationData.data.city + ', ' + locationData.data.country;\n      signUp.ip = locationData.data.query;\n      this.setState({\n        signUp\n      });\n    }, (err) => {\n      this.setState({\n        signUp\n      });\n    })\n  }\n\n  render() {\n    const { onSubmitHandler } = this.props;\n    return (\n      <form onSubmit={(event) => { onSubmitHandler(event, this.state) }} className=\"sign-up-htm\">\n        <div className=\"group\">\n          <label htmlFor=\"user\" className=\"label\">Username</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"user\" name=\"username\" type=\"text\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Password</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"password\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Repeat Password</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"password\" name=\"repeat\" className=\"input\" data-type=\"password\" />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"pass\" className=\"label\">Email Address</label>\n          <input required onChange={this.signUpOnChangeHandler.bind(this)} id=\"pass\" type=\"text\" name=\"email\" className=\"input\" />\n        </div>\n        <div className=\"group\">\n          <input type=\"submit\" className=\"button\" name=\"sign-up\" value=\"Sign Up\" />\n        </div>\n        <div className=\"hr\"></div>\n        <div className=\"foot-lnk\">\n          <label htmlFor=\"tab-1\">Already Member?</label>\n        </div>\n      </form>\n    )\n  }\n}\n","import localForage from 'localforage';\nimport * as Backend from '../helper/backend';\n\nexport const updateTask = (value) => {\n  return (dispatch, getState) => {\n    const tasks = {\n      type: 'UPDATE_TASK',\n      value: value\n    }\n    if (getState().authState.isAuthenticated) {\n      Backend.post('todo/todo-update', { payload: { tasks: value } }).then((result) => {\n        dispatch(tasks);\n      });\n    } else {\n      localForage.setItem('tasks', tasks).then((success) => {\n        dispatch(success);\n      });\n    }\n  }\n}\n\nexport const fetchTasks = (value) => {\n  return (dispatch) => {\n    const tasks = {\n      type: 'FETCH_TASKS_DATA',\n      value: value\n    }\n    dispatch(tasks);\n  }\n}","import React, { Component } from 'react';\nimport Login from '../../components/log-in/Login';\nimport Signup from '../../components/sign-up/Signup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport * as hlp from '../../helper/helper-functions';\nimport * as Backend from '../../helper/backend';\nimport './Home.scss';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedForm: 'sign-in',\n      error: ''\n    }\n  }\n\n  componentDidMount = () => {\n    const token = hlp.getCookie('token');\n    if (token) {\n      this.getUserData();\n    }\n  };\n\n  getUserData() {\n    Backend.get('todo/todo-list').then((result) => {\n      const tasks = result.data;\n      this.props.fetchTasks({ tasks: tasks });\n      setTimeout(() => {\n        this.props.history.push({ pathname: '/todos' });\n      }, 1000);\n    })\n  }\n\n  formSelectionHanndler(event) {\n    this.setState({\n      selectedForm: event.target.name\n    })\n  }\n\n  onSubmitHandler(event, data) {\n    event.preventDefault();\n    if (data.name === 'sign-in') {\n      const payload = {\n        email: data.signIn.username,\n        password: data.signIn.password,\n        remember: data.signIn.remember\n      }\n      this.gotoDashboard('/login', { payload });\n    } else if (data.name === 'sign-up') {\n      const payload = {\n        email: data.signUp.email,\n        username: data.signUp.username,\n        password: data.signUp.password,\n        usertype: 'admin',\n        country: data.signUp.country,\n        device: data.signUp.device,\n      }\n      this.gotoDashboard('/signup', { payload });\n    }\n  }\n\n  gotoDashboard(url, data) {\n    Backend.post(url, data).then((result) => {\n      if (result.data.data) {\n        hlp.setCookie('token', result.data.data['access_token'], result.data.data['expires_in']);\n        this.getUserData();\n      } else if (!result.data && url === '/signup') {\n        this.setState({\n          error: 'User Already Exists.'\n        });\n\n      } else if (!result.data && url === '/login') {\n        this.setState({\n          error: 'Please check your email and password'\n        });\n      }\n    })\n  }\n\n  render() {\n    const { selectedForm, error } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"login-wrap\">\n          <div className=\"login-html\">\n            <p style={{ color: '#8e0428f7' }}>{error}</p>\n            <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in\" name=\"sign-in\" checked={selectedForm === 'sign-in' ? true : false} onChange={this.formSelectionHanndler.bind(this)} /><label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\n            <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up\" name=\"sign-up\" checked={selectedForm === 'sign-up' ? true : false} onChange={this.formSelectionHanndler.bind(this)} /><label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\n            <div className=\"login-form\">\n              <Login onSubmitHandler={(event, payload) => { this.onSubmitHandler(event, payload) }} />\n              <Signup onSubmitHandler={(event, payload) => { this.onSubmitHandler(event, payload) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    taskState: state.taskState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTasks: ({ tasks }) => dispatch(actions.fetchTasks({ tasks })),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport './AddTask.css';\n\nexport default function AddTask({ openNewTodo, toggleTodoHandler, addNewTodoHandler }) {\n\n  let formData = {\n    title: '',\n    description: '',\n    priority: 'High'\n  };\n\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    formData['time'] = new Date().toLocaleString();\n    addNewTodoHandler(formData);\n  }\n\n  function onChangeHandler(event) {\n    formData[event.target.name] = event.target.value;\n  }\n\n  return (\n    <main role=\"main\" className={openNewTodo ? 'main-wrap' : 'hidden'}>\n      <header role=\"heading\" className=\"header\">\n        <h1 className=\"app-header\"> Add your task <span className=\"close-add-task\" onClick={() => { toggleTodoHandler(false) }}>X</span></h1>\n      </header>\n      <section className=\"main-content\">\n        <section className=\"todo-form\">\n          <form role=\"form\" id=\"todoForm\" onSubmit={onSubmitHandler}>\n            <div className=\"row\">\n              <label htmlFor=\"title\"> Title </label>\n              <input onChange={onChangeHandler} className=\"form-input\" name=\"title\" id=\"title\" type=\"text\" placeholder=\"Learn JavaScript\" />\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"description\"> Description </label>\n              <textarea onChange={onChangeHandler} id=\"description\" name=\"description\" rows=\"4\" cols=\"30\" placeholder=\"Coz you already know Java\"></textarea>\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"priority\"> Priority </label>\n              <select onChange={onChangeHandler} id=\"priority\" name=\"priority\">\n                <option value=\"high\">High</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"low\">Low</option>\n              </select>\n            </div>\n            <div className=\"row submit-btn\">\n              <input onChange={onChangeHandler} type=\"submit\" className=\"primary-button\" value=\"DO IT\" />\n            </div>\n          </form>\n        </section>\n      </section>\n    </main>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nclass CompletedTask extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // console.log('[completedTask.js] In construction and props is', props);\n  }\n\n  /****************** Life Cycle Method for Demo Purposes *******************************/\n  /**\n   * This lifecycle function called each time whenevr the component\n   * props or state changes and retutn something. This method execute\n   * after the construction()\n   */\n  // static getDerivedStateFromProps(props, state) {\n  //     console.log('[completedTask.js] getDerivedStateFromProps and props, state is', props, state);\n  //     return state;\n  // }\n\n  // /**\n  //  * This lifecycle method called each time after the getderivedStateFromProps method\n  //  * The main purpose if this method is to cancle the updating process. \n  //  * This method should return true or false only. True means accept\n  //  * You can extend PureComponent class to render the UI on the basis of props changes.\n  //  */\n  // shouldComponentUpdate = (nextProps, nextState) => {\n  //     console.log('[completedTask.js] shouldComponentUpdate', nextProps, nextState);\n  //     return true;\n  // };\n\n  /************************************************************************************/\n  render() {\n    // console.log('[completedTask.js] render');\n    const { completedTask, removeCompletedTaskHandler, num } = this.props;\n    return (\n      <li className={\"todo-item \" + completedTask.priority.toLowerCase()}>\n        <div className=\"icon-check\">\n          <i className=\"pad-15 material-icons md-36 md-light\" onClick={() => { removeCompletedTaskHandler(completedTask.key) }}>check_circle</i>\n        </div>\n\n        <div className=\"icon-delete\">\n          <i className=\"pad-15 material-icons md-36 md-light\" onClick={() => { removeCompletedTaskHandler(completedTask.key) }}>delete</i>\n        </div>\n        <div className=\"content\">\n          {completedTask.title}\n        </div>\n      </li>\n    )\n  }\n\n  /****************** Life Cycle Method for Demo Purposes *******************************/\n  /**\n * This Lifecycle function once when the component is created after the\n * render() method. So because it runs only once, you can do some request\n * to fetch the application data.\n */\n  // componentDidMount = () => {\n  //     console.log('[completedTask.js] componentDidMount');\n  // };\n\n  // /**\n  //  * This lifecycle method called each time after render() method. This method have access\n  //  * to DOM and can update the dom element.\n  //  */\n  // getSnapshotBeforeUpdate(prevProp, prevState) {\n  //     console.log('[completedTask.js] getSnapshotBeforUpdate');\n  //     return { snap: 'snaplshot' }\n  // }\n\n  // /**\n  //  * This lifecycle method called each time after when something is updated\n  //  * in the state of the component\n  //  */\n  // componentDidUpdate = (prop, state, snap) => {\n  //     console.log('[completedTask.js] componentDidUpdate', prop, state, snap)\n  // }\n\n  // /**\n  //  * This lifecycle method called once when the component is destroyed\n  //  */\n  // componentWillUnmount = () => {\n  //     console.log('[completedTask.js] componentWillUnmount')\n  // };\n  /************************************************************************************/\n}\n\nCompletedTask.propTypes = {\n  completedTask: PropTypes.object,\n  removeCompletedTaskHandler: PropTypes.func\n};\n\nexport default CompletedTask;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Task(props) {\n  const { task, deleteTaskHandler, addCompletedTaskHandler } = props;\n\n  /************************** React hooks *********************************************/\n  /**\n   * Use effect function of react hook calls everytime after render method\n   * when something change in the component.\n   * You can restrict the useeffect running cycle by passing the 2nd argument as an array.\n   */\n  // useEffect(() => {\n  //     console.log('[Task.js] useEffect() React hook');\n  // });\n\n  // This is only called when delete handler is chnages, you can leave empty array\n  // if you want to call useEffect() only once\n  // useEffect(() => {\n  //     console.log('[Task.js] useEffect() React hook when task changes');\n  // }, [task]);\n\n  // useEffect(() => {\n  //     return () => {\n  //         console.log('[Task.js] useEffect() React hook cleanup task go here');\n  //     }\n  // }, []);\n  /****************************************************************************************/\n\n  return (\n    <li draggable=\"true\" className={'todo-item ' + task.priority.toLowerCase()}>\n      <div className=\"card\">\n        <h3 className=\"todo-title\">\n          <span className=\"action\">\n            <i className=\"material-icons md-36 icon-delete\" onClick={() => { deleteTaskHandler(task.key) }}>delete</i>\n            <i className=\"icon-checkbox-outline material-icons md-36 md-dark\" onClick={() => { addCompletedTaskHandler(task.key) }}>check_box_outline_blank</i>\n            <i className=\"icon-checkbox material-icons md-36 md-light\">check_box</i>\n          </span>\n          <span className=\"title\">{task.title} </span></h3>\n        <p className=\"todo-description\">\n          {task.description} </p>\n        <span className=\"todo-priority\"> {task.priority}</span>\n        <span className=\"time\">{task.time}</span>\n      </div>\n    </li>\n  )\n}\n\nTask.propTypes = {\n  task: PropTypes.object,\n  deleteTaskHandler: PropTypes.func,\n  addCompletedTaskHandler: PropTypes.func\n};\n\n// React memo take the screenshot of current component props. So if nothing is changes then\n// DOM does not rerender\nexport default React.memo(Task);\n","import React, { Component } from 'react';\nimport AddTask from '../../components/add-task/AddTask';\nimport CompletedTask from '../../components/completed-task/CompletedTask';\nimport Task from '../../components/tasks/Task';\nimport { connect } from 'react-redux';\nimport localForage from 'localforage';\nimport * as actions from '../../store/actions';\nimport * as hlp from '../../helper/helper-functions';\nimport * as Backend from '../../helper/backend';\n\nclass Todo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      openNewTodo: false\n    }\n  }\n\n  toggleTodoHandler(value) {\n    // Use setState function argument as a function if your new state is dependent on\n    // prevous one else you should use object as argument\n    this.setState((prevState, props) => {\n      return { openNewTodo: value };\n    });\n  }\n\n\n  addNewTodoHandler(data) {\n    const { tasks } = this.props.taskState;\n    tasks.push(data);\n    this.props.updateTasks(tasks);\n    this.toggleTodoHandler(false);\n  }\n\n  deleteTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks.splice(index, 1);\n    this.props.updateTasks(tasks);\n  }\n\n  removeCompletedTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks[index].completed = false;\n    this.props.updateTasks(tasks);\n  }\n\n  addCompletedTaskHandler(index) {\n    const { tasks } = this.props.taskState;\n    tasks[index].completed = true;\n    this.props.updateTasks(tasks);\n  }\n\n  render() {\n    const { tasks } = this.props.taskState;\n    console.log(tasks)\n    const { openNewTodo } = this.state;\n\n    return (\n      <section className=\"todo-list-container\">\n        <div className=\"todo-in-progress\">\n          <h2> Working tasks</h2>\n          <ul onDragStart={() => { console.log('on drag called') }} className=\"todo-list\" id=\"target\">\n            {/* Warning Task */}\n            {\n              tasks.map((task, index) => {\n                // setting index as  a key is not a good way\n                if (!task.completed) {\n                  return <Task\n                    task={task}\n                    key={index}\n                    deleteTaskHandler={() => { this.deleteTaskHandler(index) }}\n                    addCompletedTaskHandler={() => { this.addCompletedTaskHandler(index) }}\n                  />\n                }\n              })\n            }\n\n            {/* To add new todo task */}\n            <li className=\"todo-item new\">\n              <div className=\"card\" onClick={() => this.toggleTodoHandler(true)}>\n                <h3 className=\"todo-title\"> <span className=\"action\">\n                  <i className=\"complete material-icons md-36 md-light\">add_circle_outline</i>\n                </span>\n                  <span className=\"title\">ADD A TODO</span></h3>\n              </div>\n            </li>\n\n            {/* New Task creator form pop up */}\n            <AddTask\n              openNewTodo={openNewTodo}\n              toggleTodoHandler={this.toggleTodoHandler.bind(this)}\n              addNewTodoHandler={this.addNewTodoHandler.bind(this)}\n            />\n          </ul>\n        </div>\n\n        {/* completed todo task of app */}\n        <div className=\"todo-completed\">\n          <ul className=\"todo-list-completed\">\n            <h2> Completed Tasks </h2>\n            {\n              tasks.map((task, index) => {\n                if (task.completed) {\n                  return <CompletedTask\n                    completedTask={task}\n                    key={index}\n                    removeCompletedTaskHandler={this.removeCompletedTaskHandler.bind(this, index)}\n                  />\n                }\n              })\n            }\n          </ul>\n        </div>\n      </section>\n    )\n  }\n\n  /**\n * This Lifecycle function once when the component is created after the\n * render() method. So because it runs only once, you can do some request\n * to fetch the application data.\n */\n  componentDidMount = () => {\n    if (this.props.authState.isAuthenticated || hlp.getCookie('token')) {\n      const token = hlp.getCookie('token');\n      if (token) {\n        this.getUserData();\n      }\n    } else {\n      Backend.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\n        localForage.getItem('tasks').then((data) => {\n          if (data) {\n            this.props.updateTasks(data.value);\n            return;\n          }\n        })\n        const updatedResponse = response.data.slice(1, 10);\n        const tasks = [];\n        updatedResponse.map((result, index) => {\n          // for better UI\n          const priority = ['Medium', 'High', 'Medium', 'High', 'Low', 'Medium', 'High', 'Low', 'Medium', 'High'];\n          const completed = [true, false, true, true, false, true, false, false, false, false];\n          /***/\n          tasks.push({\n            title: result.title,\n            description: result.body,\n            completed: completed[index],\n            priority: priority[index]\n          });\n        });\n        this.props.updateTasks(tasks);\n      });\n    };\n  }\n\n  getUserData() {\n    Backend.get('todo/todo-list').then((result) => {\n      const tasks = result.data;\n      this.props.fetchTasks({ tasks: tasks });\n    })\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    taskState: state.taskState,\n    authState: state.authState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTasks: (tasks) => dispatch(actions.updateTask(tasks)),\n    fetchTasks: ({ tasks }) => dispatch(actions.fetchTasks({ tasks })),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport TextEditor from './components/text-editor/TextEditor';\nimport Home from './pages/home/Home';\nimport Todo from './pages/todo/Todo';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/todos\" exact component={Todo} />\n            <Route path=\"/text-editor\" exact component={TextEditor} />\n          </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  taskState: {\n    tasks: []\n  },\n  authState: {\n    isAuthenticated: false\n  }\n}\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_TASK':\n      return {\n        ...state,\n        taskState: { tasks: action.value, openNewTodo: false }\n      }\n\n    case 'FETCH_TASKS_DATA':\n      return {\n        ...state,\n        taskState: { tasks: action.value.tasks },\n        authState: { isAuthenticated: true }\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport Reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App title=\"My Bird\" /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}